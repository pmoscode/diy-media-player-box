---
- name: ">>{{ component_name }}<<: Archive on localhost to prevent long copy action"
  archive:
    path: "../{{ component_name }}"
    dest: "../archives/{{ component_name }}.tar.gz"
  delegate_to: localhost
  register: pack_info
  tags:
    - "{{ tag_name }}"

- name: ">>{{ component_name }}<<: Copy source archive to target"
  copy:
    src: "../archives/{{ component_name }}.tar.gz"
    dest: "/tmp/"
  when: pack_info.changed
  tags:
    - "{{ tag_name }}"

- name: ">>{{ component_name }}<<: Unpack uploaded"
  unarchive:
    src: "/tmp/{{ component_name }}.tar.gz"
    dest: "/tmp/"
    remote_src: yes
  register: unpack_info
  when: pack_info.changed
  tags:
    - "{{ tag_name }}"

- name: ">>{{ component_name }}<<: Init go modules"
  shell: /usr/local/go/bin/go mod tidy
  args:
    chdir: "/tmp/{{ component_name }}"
  when: pack_info.changed and unpack_info.changed
  tags:
    - "{{ tag_name }}"

- name: ">>{{ component_name }}<<: Compile component"
  shell: /usr/local/go/bin/go build
  args:
    chdir: "/tmp/{{ component_name }}"
  when: pack_info.changed and unpack_info.changed
  tags:
    - "{{ tag_name }}"

- name: ">>{{ component_name }}<<: Copy compiled binary to target"
  copy:
    src: "/tmp/{{ component_name }}/{{ component_name }}"
    dest: "/home/pi/{{ component_name }}"
    remote_src: yes
    mode: preserve
  when: pack_info.changed and unpack_info.changed
  tags:
     - "{{ tag_name }}"
